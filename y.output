文法

    0 $accept: translation_unit $end

    1 translation_unit: definition_or_expression
    2                 | translation_unit definition_or_expression

    3 definition_or_expression: function_definition
    4                         | expression SEMICOLON
    5                         | error

    6 function_definition: DEFINE IDENTIFIER LP parameter_list RP LC expression_list RC
    7                    | DEFINE IDENTIFIER LP RP LC expression_list RC

    8 parameter_list: IDENTIFIER
    9               | parameter_list COMMA IDENTIFIER

   10 expression_list: expression
   11                | expression_list COMMA expression

   12 expression: equality_expression
   13           | IDENTIFIER ASSIGN equality_expression

   14 equality_expression: relational_expression
   15                    | equality_expression EQ relational_expression
   16                    | equality_expression NE relational_expression

   17 relational_expression: additive_expression
   18                      | relational_expression GT additive_expression
   19                      | relational_expression GE additive_expression
   20                      | relational_expression LT additive_expression
   21                      | relational_expression LE additive_expression

   22 additive_expression: multiplicative_expression
   23                    | additive_expression ADD multiplicative_expression
   24                    | additive_expression SUB multiplicative_expression

   25 multiplicative_expression: unary_expression
   26                          | multiplicative_expression MUL unary_expression
   27                          | multiplicative_expression DIV unary_expression
   28                          | multiplicative_expression MOD unary_expression

   29 unary_expression: postfix_expression
   30                 | SUB unary_expression

   31 postfix_expression: primary_expression

   32 primary_expression: IDENTIFIER LP expression_list RP
   33                   | IDENTIFIER LP RP
   34                   | if_expression
   35                   | while_expression
   36                   | LP expression RP
   37                   | IDENTIFIER
   38                   | INT_LITERAL
   39                   | DOUBLE_LITERAL

   40 if_expression: IF expression LC expression_list RC
   41              | IF expression LC expression_list RC ELSE LC expression_list RC

   42 while_expression: WHILE expression LC expression_list RC


出現位置の規則による終端

$end (0) 0
error (256) 5
INT_LITERAL (258) 38
DOUBLE_LITERAL (259) 39
IDENTIFIER (260) 6 7 8 9 13 32 33 37
DEFINE (261) 6 7
IF (262) 40 41
ELSE (263) 41
WHILE (264) 42
LP (265) 6 7 32 33 36
RP (266) 6 7 32 33 36
LC (267) 6 7 40 41 42
RC (268) 6 7 40 41 42
SEMICOLON (269) 4
COMMA (270) 9 11
ASSIGN (271) 13
EQ (272) 15
NE (273) 16
GT (274) 18
GE (275) 19
LT (276) 20
LE (277) 21
ADD (278) 23
SUB (279) 24 30
MUL (280) 26
DIV (281) 27
MOD (282) 28


出現位置の規則による非終端

$accept (28)
    左辺: 0
translation_unit (29)
    左辺: 1 2, 右辺: 0 2
definition_or_expression (30)
    左辺: 3 4 5, 右辺: 1 2
function_definition (31)
    左辺: 6 7, 右辺: 3
parameter_list (32)
    左辺: 8 9, 右辺: 6 9
expression_list (33)
    左辺: 10 11, 右辺: 6 7 11 32 40 41 42
expression (34)
    左辺: 12 13, 右辺: 4 10 11 36 40 41 42
equality_expression (35)
    左辺: 14 15 16, 右辺: 12 13 15 16
relational_expression (36)
    左辺: 17 18 19 20 21, 右辺: 14 15 16 18 19 20 21
additive_expression (37)
    左辺: 22 23 24, 右辺: 17 18 19 20 21 23 24
multiplicative_expression (38)
    左辺: 25 26 27 28, 右辺: 22 23 24 26 27 28
unary_expression (39)
    左辺: 29 30, 右辺: 25 26 27 28 30
postfix_expression (40)
    左辺: 31, 右辺: 29
primary_expression (41)
    左辺: 32 33 34 35 36 37 38 39, 右辺: 31
if_expression (42)
    左辺: 40 41, 右辺: 34
while_expression (43)
    左辺: 42, 右辺: 35


State 0

    0 $accept: . translation_unit $end

    error           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    DEFINE          shift, and go to state 5
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    translation_unit           go to state 10
    definition_or_expression   go to state 11
    function_definition        go to state 12
    expression                 go to state 13
    equality_expression        go to state 14
    relational_expression      go to state 15
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 1

    5 definition_or_expression: error .

    $default  reduce using rule 5 (definition_or_expression)


State 2

   38 primary_expression: INT_LITERAL .

    $default  reduce using rule 38 (primary_expression)


State 3

   39 primary_expression: DOUBLE_LITERAL .

    $default  reduce using rule 39 (primary_expression)


State 4

   13 expression: IDENTIFIER . ASSIGN equality_expression
   32 primary_expression: IDENTIFIER . LP expression_list RP
   33                   | IDENTIFIER . LP RP
   37                   | IDENTIFIER .

    LP      shift, and go to state 23
    ASSIGN  shift, and go to state 24

    $default  reduce using rule 37 (primary_expression)


State 5

    6 function_definition: DEFINE . IDENTIFIER LP parameter_list RP LC expression_list RC
    7                    | DEFINE . IDENTIFIER LP RP LC expression_list RC

    IDENTIFIER  shift, and go to state 25


State 6

   40 if_expression: IF . expression LC expression_list RC
   41              | IF . expression LC expression_list RC ELSE LC expression_list RC

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    expression                 go to state 26
    equality_expression        go to state 14
    relational_expression      go to state 15
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 7

   42 while_expression: WHILE . expression LC expression_list RC

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    expression                 go to state 27
    equality_expression        go to state 14
    relational_expression      go to state 15
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 8

   36 primary_expression: LP . expression RP

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    expression                 go to state 28
    equality_expression        go to state 14
    relational_expression      go to state 15
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 9

   30 unary_expression: SUB . unary_expression

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 29
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    unary_expression    go to state 30
    postfix_expression  go to state 19
    primary_expression  go to state 20
    if_expression       go to state 21
    while_expression    go to state 22


State 10

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . definition_or_expression

    $end            shift, and go to state 31
    error           shift, and go to state 1
    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    DEFINE          shift, and go to state 5
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    definition_or_expression   go to state 32
    function_definition        go to state 12
    expression                 go to state 13
    equality_expression        go to state 14
    relational_expression      go to state 15
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 11

    1 translation_unit: definition_or_expression .

    $default  reduce using rule 1 (translation_unit)


State 12

    3 definition_or_expression: function_definition .

    $default  reduce using rule 3 (definition_or_expression)


State 13

    4 definition_or_expression: expression . SEMICOLON

    SEMICOLON  shift, and go to state 33


State 14

   12 expression: equality_expression .
   15 equality_expression: equality_expression . EQ relational_expression
   16                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 34
    NE  shift, and go to state 35

    $default  reduce using rule 12 (expression)


State 15

   14 equality_expression: relational_expression .
   18 relational_expression: relational_expression . GT additive_expression
   19                      | relational_expression . GE additive_expression
   20                      | relational_expression . LT additive_expression
   21                      | relational_expression . LE additive_expression

    GT  shift, and go to state 36
    GE  shift, and go to state 37
    LT  shift, and go to state 38
    LE  shift, and go to state 39

    $default  reduce using rule 14 (equality_expression)


State 16

   17 relational_expression: additive_expression .
   23 additive_expression: additive_expression . ADD multiplicative_expression
   24                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 40
    SUB  shift, and go to state 41

    $default  reduce using rule 17 (relational_expression)


State 17

   22 additive_expression: multiplicative_expression .
   26 multiplicative_expression: multiplicative_expression . MUL unary_expression
   27                          | multiplicative_expression . DIV unary_expression
   28                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 42
    DIV  shift, and go to state 43
    MOD  shift, and go to state 44

    $default  reduce using rule 22 (additive_expression)


State 18

   25 multiplicative_expression: unary_expression .

    $default  reduce using rule 25 (multiplicative_expression)


State 19

   29 unary_expression: postfix_expression .

    $default  reduce using rule 29 (unary_expression)


State 20

   31 postfix_expression: primary_expression .

    $default  reduce using rule 31 (postfix_expression)


State 21

   34 primary_expression: if_expression .

    $default  reduce using rule 34 (primary_expression)


State 22

   35 primary_expression: while_expression .

    $default  reduce using rule 35 (primary_expression)


State 23

   32 primary_expression: IDENTIFIER LP . expression_list RP
   33                   | IDENTIFIER LP . RP

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    RP              shift, and go to state 45
    SUB             shift, and go to state 9

    expression_list            go to state 46
    expression                 go to state 47
    equality_expression        go to state 14
    relational_expression      go to state 15
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 24

   13 expression: IDENTIFIER ASSIGN . equality_expression

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 29
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    equality_expression        go to state 48
    relational_expression      go to state 15
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 25

    6 function_definition: DEFINE IDENTIFIER . LP parameter_list RP LC expression_list RC
    7                    | DEFINE IDENTIFIER . LP RP LC expression_list RC

    LP  shift, and go to state 49


State 26

   40 if_expression: IF expression . LC expression_list RC
   41              | IF expression . LC expression_list RC ELSE LC expression_list RC

    LC  shift, and go to state 50


State 27

   42 while_expression: WHILE expression . LC expression_list RC

    LC  shift, and go to state 51


State 28

   36 primary_expression: LP expression . RP

    RP  shift, and go to state 52


State 29

   32 primary_expression: IDENTIFIER . LP expression_list RP
   33                   | IDENTIFIER . LP RP
   37                   | IDENTIFIER .

    LP  shift, and go to state 23

    $default  reduce using rule 37 (primary_expression)


State 30

   30 unary_expression: SUB unary_expression .

    $default  reduce using rule 30 (unary_expression)


State 31

    0 $accept: translation_unit $end .

    $default  accept


State 32

    2 translation_unit: translation_unit definition_or_expression .

    $default  reduce using rule 2 (translation_unit)


State 33

    4 definition_or_expression: expression SEMICOLON .

    $default  reduce using rule 4 (definition_or_expression)


State 34

   15 equality_expression: equality_expression EQ . relational_expression

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 29
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    relational_expression      go to state 53
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 35

   16 equality_expression: equality_expression NE . relational_expression

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 29
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    relational_expression      go to state 54
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 36

   18 relational_expression: relational_expression GT . additive_expression

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 29
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    additive_expression        go to state 55
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 37

   19 relational_expression: relational_expression GE . additive_expression

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 29
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    additive_expression        go to state 56
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 38

   20 relational_expression: relational_expression LT . additive_expression

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 29
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    additive_expression        go to state 57
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 39

   21 relational_expression: relational_expression LE . additive_expression

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 29
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    additive_expression        go to state 58
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 40

   23 additive_expression: additive_expression ADD . multiplicative_expression

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 29
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    multiplicative_expression  go to state 59
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 41

   24 additive_expression: additive_expression SUB . multiplicative_expression

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 29
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    multiplicative_expression  go to state 60
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 42

   26 multiplicative_expression: multiplicative_expression MUL . unary_expression

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 29
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    unary_expression    go to state 61
    postfix_expression  go to state 19
    primary_expression  go to state 20
    if_expression       go to state 21
    while_expression    go to state 22


State 43

   27 multiplicative_expression: multiplicative_expression DIV . unary_expression

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 29
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    unary_expression    go to state 62
    postfix_expression  go to state 19
    primary_expression  go to state 20
    if_expression       go to state 21
    while_expression    go to state 22


State 44

   28 multiplicative_expression: multiplicative_expression MOD . unary_expression

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 29
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    unary_expression    go to state 63
    postfix_expression  go to state 19
    primary_expression  go to state 20
    if_expression       go to state 21
    while_expression    go to state 22


State 45

   33 primary_expression: IDENTIFIER LP RP .

    $default  reduce using rule 33 (primary_expression)


State 46

   11 expression_list: expression_list . COMMA expression
   32 primary_expression: IDENTIFIER LP expression_list . RP

    RP     shift, and go to state 64
    COMMA  shift, and go to state 65


State 47

   10 expression_list: expression .

    $default  reduce using rule 10 (expression_list)


State 48

   13 expression: IDENTIFIER ASSIGN equality_expression .
   15 equality_expression: equality_expression . EQ relational_expression
   16                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 34
    NE  shift, and go to state 35

    $default  reduce using rule 13 (expression)


State 49

    6 function_definition: DEFINE IDENTIFIER LP . parameter_list RP LC expression_list RC
    7                    | DEFINE IDENTIFIER LP . RP LC expression_list RC

    IDENTIFIER  shift, and go to state 66
    RP          shift, and go to state 67

    parameter_list  go to state 68


State 50

   40 if_expression: IF expression LC . expression_list RC
   41              | IF expression LC . expression_list RC ELSE LC expression_list RC

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    expression_list            go to state 69
    expression                 go to state 47
    equality_expression        go to state 14
    relational_expression      go to state 15
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 51

   42 while_expression: WHILE expression LC . expression_list RC

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    expression_list            go to state 70
    expression                 go to state 47
    equality_expression        go to state 14
    relational_expression      go to state 15
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 52

   36 primary_expression: LP expression RP .

    $default  reduce using rule 36 (primary_expression)


State 53

   15 equality_expression: equality_expression EQ relational_expression .
   18 relational_expression: relational_expression . GT additive_expression
   19                      | relational_expression . GE additive_expression
   20                      | relational_expression . LT additive_expression
   21                      | relational_expression . LE additive_expression

    GT  shift, and go to state 36
    GE  shift, and go to state 37
    LT  shift, and go to state 38
    LE  shift, and go to state 39

    $default  reduce using rule 15 (equality_expression)


State 54

   16 equality_expression: equality_expression NE relational_expression .
   18 relational_expression: relational_expression . GT additive_expression
   19                      | relational_expression . GE additive_expression
   20                      | relational_expression . LT additive_expression
   21                      | relational_expression . LE additive_expression

    GT  shift, and go to state 36
    GE  shift, and go to state 37
    LT  shift, and go to state 38
    LE  shift, and go to state 39

    $default  reduce using rule 16 (equality_expression)


State 55

   18 relational_expression: relational_expression GT additive_expression .
   23 additive_expression: additive_expression . ADD multiplicative_expression
   24                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 40
    SUB  shift, and go to state 41

    $default  reduce using rule 18 (relational_expression)


State 56

   19 relational_expression: relational_expression GE additive_expression .
   23 additive_expression: additive_expression . ADD multiplicative_expression
   24                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 40
    SUB  shift, and go to state 41

    $default  reduce using rule 19 (relational_expression)


State 57

   20 relational_expression: relational_expression LT additive_expression .
   23 additive_expression: additive_expression . ADD multiplicative_expression
   24                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 40
    SUB  shift, and go to state 41

    $default  reduce using rule 20 (relational_expression)


State 58

   21 relational_expression: relational_expression LE additive_expression .
   23 additive_expression: additive_expression . ADD multiplicative_expression
   24                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 40
    SUB  shift, and go to state 41

    $default  reduce using rule 21 (relational_expression)


State 59

   23 additive_expression: additive_expression ADD multiplicative_expression .
   26 multiplicative_expression: multiplicative_expression . MUL unary_expression
   27                          | multiplicative_expression . DIV unary_expression
   28                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 42
    DIV  shift, and go to state 43
    MOD  shift, and go to state 44

    $default  reduce using rule 23 (additive_expression)


State 60

   24 additive_expression: additive_expression SUB multiplicative_expression .
   26 multiplicative_expression: multiplicative_expression . MUL unary_expression
   27                          | multiplicative_expression . DIV unary_expression
   28                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 42
    DIV  shift, and go to state 43
    MOD  shift, and go to state 44

    $default  reduce using rule 24 (additive_expression)


State 61

   26 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 26 (multiplicative_expression)


State 62

   27 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 27 (multiplicative_expression)


State 63

   28 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 28 (multiplicative_expression)


State 64

   32 primary_expression: IDENTIFIER LP expression_list RP .

    $default  reduce using rule 32 (primary_expression)


State 65

   11 expression_list: expression_list COMMA . expression

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    expression                 go to state 71
    equality_expression        go to state 14
    relational_expression      go to state 15
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 66

    8 parameter_list: IDENTIFIER .

    $default  reduce using rule 8 (parameter_list)


State 67

    7 function_definition: DEFINE IDENTIFIER LP RP . LC expression_list RC

    LC  shift, and go to state 72


State 68

    6 function_definition: DEFINE IDENTIFIER LP parameter_list . RP LC expression_list RC
    9 parameter_list: parameter_list . COMMA IDENTIFIER

    RP     shift, and go to state 73
    COMMA  shift, and go to state 74


State 69

   11 expression_list: expression_list . COMMA expression
   40 if_expression: IF expression LC expression_list . RC
   41              | IF expression LC expression_list . RC ELSE LC expression_list RC

    RC     shift, and go to state 75
    COMMA  shift, and go to state 65


State 70

   11 expression_list: expression_list . COMMA expression
   42 while_expression: WHILE expression LC expression_list . RC

    RC     shift, and go to state 76
    COMMA  shift, and go to state 65


State 71

   11 expression_list: expression_list COMMA expression .

    $default  reduce using rule 11 (expression_list)


State 72

    7 function_definition: DEFINE IDENTIFIER LP RP LC . expression_list RC

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    expression_list            go to state 77
    expression                 go to state 47
    equality_expression        go to state 14
    relational_expression      go to state 15
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 73

    6 function_definition: DEFINE IDENTIFIER LP parameter_list RP . LC expression_list RC

    LC  shift, and go to state 78


State 74

    9 parameter_list: parameter_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 79


State 75

   40 if_expression: IF expression LC expression_list RC .
   41              | IF expression LC expression_list RC . ELSE LC expression_list RC

    ELSE  shift, and go to state 80

    $default  reduce using rule 40 (if_expression)


State 76

   42 while_expression: WHILE expression LC expression_list RC .

    $default  reduce using rule 42 (while_expression)


State 77

    7 function_definition: DEFINE IDENTIFIER LP RP LC expression_list . RC
   11 expression_list: expression_list . COMMA expression

    RC     shift, and go to state 81
    COMMA  shift, and go to state 65


State 78

    6 function_definition: DEFINE IDENTIFIER LP parameter_list RP LC . expression_list RC

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    expression_list            go to state 82
    expression                 go to state 47
    equality_expression        go to state 14
    relational_expression      go to state 15
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 79

    9 parameter_list: parameter_list COMMA IDENTIFIER .

    $default  reduce using rule 9 (parameter_list)


State 80

   41 if_expression: IF expression LC expression_list RC ELSE . LC expression_list RC

    LC  shift, and go to state 83


State 81

    7 function_definition: DEFINE IDENTIFIER LP RP LC expression_list RC .

    $default  reduce using rule 7 (function_definition)


State 82

    6 function_definition: DEFINE IDENTIFIER LP parameter_list RP LC expression_list . RC
   11 expression_list: expression_list . COMMA expression

    RC     shift, and go to state 84
    COMMA  shift, and go to state 65


State 83

   41 if_expression: IF expression LC expression_list RC ELSE LC . expression_list RC

    INT_LITERAL     shift, and go to state 2
    DOUBLE_LITERAL  shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 6
    WHILE           shift, and go to state 7
    LP              shift, and go to state 8
    SUB             shift, and go to state 9

    expression_list            go to state 85
    expression                 go to state 47
    equality_expression        go to state 14
    relational_expression      go to state 15
    additive_expression        go to state 16
    multiplicative_expression  go to state 17
    unary_expression           go to state 18
    postfix_expression         go to state 19
    primary_expression         go to state 20
    if_expression              go to state 21
    while_expression           go to state 22


State 84

    6 function_definition: DEFINE IDENTIFIER LP parameter_list RP LC expression_list RC .

    $default  reduce using rule 6 (function_definition)


State 85

   11 expression_list: expression_list . COMMA expression
   41 if_expression: IF expression LC expression_list RC ELSE LC expression_list . RC

    RC     shift, and go to state 86
    COMMA  shift, and go to state 65


State 86

   41 if_expression: IF expression LC expression_list RC ELSE LC expression_list RC .

    $default  reduce using rule 41 (if_expression)
